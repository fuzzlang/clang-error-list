{
  "id": "err_template_nontype_parm_different_type",
  "description": "This error occurs when a template is redeclared with a non-type template parameter that has a different type from the original declaration.",
  "exampleCode": "namespace test3 {\n  template<typename T, T Value> struct X2a;\n\n  template<typename T, int Size> struct X2b;\n\n  template<typename T>\n  class X3 {\n    template<typename U, U Value> friend struct X2a;\n\n    // expected-error {{template non-type parameter has a different type 'long' in template redeclaration}}\n    template<typename U, T Value> friend struct X2b; \n  };\n\n  X3<int> x3i; // okay\n  X3<long> x3l; // expected-note {{in instantiation}}\n}",
  "explanation": "The error occurs when X3<long> is instantiated because the friend declaration of X2b uses T (which becomes 'long') as the type of the non-type parameter Value, but the original declaration of X2b used 'int' as the type of the non-type parameter.",
  "fixedCode": "namespace test3 {\n    template<typename T, T Value> struct X2a;\n    \n    template<typename T, int Size> struct X2b;\n    \n    template<typename T>\n    class X3 {\n        template<typename U, U Value> friend struct X2a;\n        \n        // Fix: Use the same template parameter types as X2b\n        template<typename U, int Value> friend struct X2b;\n    };\n    \n    X3<int> x3i; // okay\n    X3<long> x3l; // should work now\n}"
} 
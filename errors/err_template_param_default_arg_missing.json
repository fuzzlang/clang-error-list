{
  "id": "err_template_param_default_arg_missing",
  "description": "This error occurs when a template parameter is missing a default argument, but a subsequent parameter has a default argument. In C++, if a template parameter has a default argument, all subsequent parameters must also have default arguments.",
  "exampleCode": "// expected-error@-1 {{cannot add a default template argument to the definition of a member of a class template}}\n\ntemplate<typename> void friend_h();\nstruct A {\n    // FIXME: This is ill-formed.\n    template<typename=void> struct friend_B;\n    // FIXME: f, h, and i are ill-formed.\n    //  f is ill-formed because it is not a definition.\n    //  h and i are ill-formed because they are not the only declarations of the\n    //  function in the translation unit.\n    template<typename=void> void friend_f();\n    // cxx98-error@-1 {{default template arguments for a function template are a C++11 extension}}\n    template<typename=void> void friend_g() {}\n    // cxx98-error@-1 {{default template arguments for a function template are a C++11 extension}}\n    template<typename=void> void friend_h() {}\n    // cxx98-error@-1 {{default template arguments for a function template are a C++11 extension}}\n    template<typename=void> void friend_i() {}\n    // cxx98-error@-1 {{default template arguments for a function template are a C++11 extension}}\n};\ntemplate<typename> void friend_i();\n\ntemplate<typename=void, typename X> void foo(X) {}\n// cxx98-error@-1 {{default template arguments for a function template are a C++11 extension}}\ntemplate<typename=void, typename X> struct Foo {};",
  "explanation": "The error occurs because the second template parameter 'X' does not have a default argument, but the first parameter does. In C++, if a template parameter has a default argument, all subsequent parameters must also have default arguments.",
  "fixedCode": "// Either provide a default for all subsequent parameters\ntemplate<typename=void, typename X=int> void foo(X) {}\ntemplate<typename=void, typename X=int> struct Foo {};\n\n// Or remove the default from the first parameter\ntemplate<typename, typename X> void bar(X) {}\ntemplate<typename, typename X> struct Bar {};"
} 
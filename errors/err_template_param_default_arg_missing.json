{
  "id": "err_template_param_default_arg_missing",
  "description": "This error occurs when a template parameter is missing a default argument, but a subsequent parameter has a default argument. In C++, if a template parameter has a default argument, all subsequent parameters must also have default arguments.",
  "exampleCode": "template<typename=void, typename X> void foo(X) {}\ntemplate<typename=void, typename X> struct Foo {};",
  "explanation": "The error occurs because the second template parameter 'X' does not have a default argument, but the first parameter does. In C++, if a template parameter has a default argument, all subsequent parameters must also have default arguments.",
  "fixedCode": "// Either provide a default for all subsequent parameters\ntemplate<typename=void, typename X=int> void foo(X) {}\ntemplate<typename=void, typename X=int> struct Foo {};\n\n// Or remove the default from the first parameter\ntemplate<typename, typename X> void bar(X) {}\ntemplate<typename, typename X> struct Bar {};"
} 
{
  "id": "err_template_nontype_parm_incomplete",
  "description": "This error occurs when a non-type template parameter has an incomplete type. Non-type template parameters must have complete types.",
  "exampleCode": "struct A; // expected-note {{forward declaration}}\n\ntemplate<A a> class X0; // expected-error{{has incomplete type 'A'}}",
  "explanation": "The error occurs because the non-type template parameter 'a' has the incomplete type 'A'. At the point of the template declaration, 'A' is only forward-declared and not fully defined, so its size and layout are unknown. Note that in C++20, this example would actually be valid as the standard now allows incomplete types as non-type template parameters.",
  "fixedCode": "struct A;\n\ntemplate<const A& a> class X0 {};"
} 